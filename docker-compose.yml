version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    networks:
      - bubble
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  ingestor:
    build:
      context: .
      dockerfile: Dockerfile.ingestor
    container_name: ingestor
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?sslmode=disable
      FILE_PATH: /input
    networks:
      - bubble
    volumes:
      - ./input:/input:rw
    profiles: ["ingestion"]
    healthcheck:
      test: ["CMD-SHELL", "ps -o comm= 1 >/dev/null 2>&1 || exit 0"]
      interval: 1m
      timeout: 5s
      retries: 1
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?sslmode=disable
      SERVER_PORT: "8080"
    networks:
      - bubble
    ports:
      - "8080:8080"
    restart: unless-stopped

networks:
  bubble:
    external: true

volumes:
  postgres_data:
